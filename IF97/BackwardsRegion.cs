using System;

namespace IF97
{
    public class BackwardsRegion
    {
        protected double p_star, X_star, T_star, h_star, s_star, s2_star;
        protected int N;
        protected double a, b, c, d, e, f;
        protected int[] I, J;
        protected double[] n;
        public BackwardsRegion(ValueTuple<int, int, double>[] data)
        {
            N = data.Length;
            I = new int[N];
            J = new int[N];
            n = new double[N];
            for (int i = 0; i < N; ++i)
            {
                var tuple = data[i];
                I[i] = tuple.Item1;
                J[i] = tuple.Item2;
                n[i] = tuple.Item3;
            }
        }

        // This function imitates the Region3BackwardsRegion structure already written above
        // for v(T,p) in Region 3. However, it can be used for the functions T(p,h) [Y=T, X=h] or
        // T(p,s) [Y=T, X=s] in Regions 1, 2, or 3.  Additionally, it can be called for
        // v(p,h) [Y=v, X=h] or v(p,s) [Y=v, X=s] in Region 3.  since there are no direct formulas
        // for v(p,h) and v(p,s) in Regions 1 and 2, they have got be evaluated in a two step
        // process by evaluating v(T,p) using T(p,X) and the p value supplied.
        public virtual double T_pX(double p, double X)
        {
            double pi = p / p_star, eta = X / X_star;
            double summer = 0;
            for (int i = 0; i < N; ++i)
            {
                summer += n[i] * FastPow.Pow(pi + a, I[i]) * FastPow.Pow(eta + b, J[i]) * FastPow.Pow(f, J[i]);
            }
            return summer * T_star;
        }

        // This function implements the backward boundary formulas for h'(s), h"(s) as defined 
        // in the IAPWS supplementary releases of 2014 for region 3.  It should only be called
        // when the appropriate coefficients are provided for an h(s) instance of this class.
        public virtual double h_s(double s)
        {
            double sigma1 = s / s_star, sigma2 = s / s2_star;
            double summer = 0;
            for (int i = 0; i < N; ++i)
            {
                summer += n[i] * FastPow.Pow(Math.Pow(sigma1, d) + a, I[i]) * FastPow.Pow(sigma2 + b, J[i]);
            }
            // NOTE: c=1, e=0 : Straight summation
            //       c>1, e=0 : Power fit
            //       c=1, e=1 : Exp fit
            return ((1 - e) * Math.Pow(summer, c) + e * Math.Exp(summer)) * h_star;
        }

        // This function implements the backward formulas for p(h,s) as defined in the IAPWS
        // supplementary releases of 2014 for regions 1, 2, and 3.  It should only be called
        // when the appropriate coefficients are provided for a p(h,s) instance of this class.
        public double p_hs(double h, double s)
        {
            double eta = h / h_star, sigma = s / s_star;
            double summer = 0;
            for (int i = 0; i < N; ++i)
            {
                summer += n[i] * FastPow.Pow(eta + a, I[i]) * FastPow.Pow(sigma + b, J[i]);
            }
            return Math.Pow(summer, c) * p_star;
        }

        //       Add function for Tb23(h,s) Boundary Line.  There will only be one instance below.
        //       It may double as Tsat(h,s) in Region 4 as well.
        public virtual double t_hs(double h, double s)
        {
            double eta = h / h_star, sigma = s / s_star;
            double summer = 0;
            for (int i = 0; i < N; ++i)
            {
                summer += n[i] * FastPow.Pow(eta + a, I[i]) * FastPow.Pow(sigma + b, J[i]);
            }
            return summer * T_star;
        }

        static readonly double[] Region2b2cdata = {
         0.90584278514723E+3,
        -0.67955786399241E+0,
         0.12809002730136E-3,
         0.26526571908428E+4,
         0.45257578905948E+1
        };

        public static double P2b2c_h(double h)
        {
            // Only called for Region determination and debugging.  No range checking.
            double p_star = 1, h_star = 1, eta = h / h_star;
            double PI = Region2b2cdata[0] + Region2b2cdata[1] * eta + Region2b2cdata[2] * eta * eta;
            return PI * p_star;
        }
        public static double H2b2c_p(double p)
        {
            // Only called for Region determination and debugging.  No range checking.
            double p_star = 1, h_star = 1, PI = p / p_star;
            double ETA = Region2b2cdata[3] + Math.Sqrt((PI - Region2b2cdata[4]) / Region2b2cdata[2]);
            return ETA * h_star;
        }

        static readonly double[] Region3abdata = {
         0.201464004206875E+4,
         0.374696550136983E+1,
        -0.219921901054187E-1,
         0.875131686009950E-4,
        };

        public static double H3ab_p(double p)
        {
            // Only called for Region determination and debugging.  No range checking.
            double p_star = 1, h_star = 1, PI = p / p_star;
            double ETA = Region3abdata[0] + Region3abdata[1] * PI + Region3abdata[2] * PI * PI + Region3abdata[3] * PI * PI * PI;
            return ETA * h_star;
        }

        static readonly double[] Region2abdata = {
        -0.349898083432139E+4,
         0.257560716905876E+4,
        -0.421073558227969E+3,
         0.276349063799944E+2,
        };
        public static double H2ab_s(double s)
        {
            // Only called for Region determination and debugging.  No range checking.
            double s_star = 1, h_star = 1, sigma = s / s_star;
            double ETA = Region2abdata[0] + Region2abdata[1] * sigma + Region2abdata[2] * Math.Pow(sigma, 2) + Region2abdata[3] * Math.Pow(sigma, 3);
            return ETA * h_star;
        }

        static Boundary13HS b13 = new Boundary13HS();
        public static double H13_s(double s)
        {
            // Only called for Region determination and debugging.  No range checking.
            return b13.h_s(s);
        }
        static Boundary14HS b14hs = new Boundary14HS();
        static Boundary3a4HS b3a4hs = new Boundary3a4HS();
        static Boundary2c3b4HS b2c3b4hs = new Boundary2c3b4HS();
        static Boundary2ab4HS b2ab4hs = new Boundary2ab4HS();
        public static double Hsat_s(double s)
        {
            // Only called for Region determination and debugging.  Has range checking.
            if (s < 0)
                throw new ArgumentOutOfRangeException("Entropy out of range");
            else if (s <= Constants.SfT23)
                return b14hs.h_s(s);
            else if (s <= Constants.Scrit)
                return b3a4hs.h_s(s);
            else if (s <= Constants.S2bc)
                return b2c3b4hs.h_s(s);
            else if (s <= Constants.Sgtrip)
                return b2ab4hs.h_s(s);
            else
                throw new ArgumentOutOfRangeException("Entropy out of range");
        }
    }

    // Region 1 *******************************************************************************
    class Region1H : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  0, -0.23872489924521E+03),
            (0,  1,  0.40421188637945E+03),
            (0,  2,  0.11349746881718E+03),
            (0,  6, -0.58457616048039E+01),
            (0, 22, -0.15285482413140E-03),
            (0, 32, -0.10866707695377E-05),
            (1,  0, -0.13391744872602E+02),
            (1,  1,  0.43211039183559E+02),
            (1,  2, -0.54010067170506E+02),
            (1,  3,  0.30535892203916E+02),
            (1,  4, -0.65964749423638E+01),
            (1, 10,  0.93965400878363E-02),
            (1, 32,  0.11573647505340E-06),
            (2, 10, -0.25858641282073E-04),
            (2, 32, -0.40644363084799E-08),
            (3, 10,  0.66456186191635E-07),
            (3, 32,  0.80670734103027E-10),
            (4, 32, -0.93477771213947E-12),
            (5, 32,  0.58265442020601E-14),
            (6, 32, -0.15020185953503E-16)
        };
        public Region1H() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 2500.0; a = 0; b = 1.0; f = 1;
        }
    }
    class Region1S : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  0,  0.17478268058307E+03),
            (0,  1,  0.34806930892873E+02),
            (0,  2,  0.65292584978455E+01),
            (0,  3,  0.33039981775489E+00),
            (0, 11, -0.19281382923196E-06),
            (0, 31, -0.24909197244573E-22),
            (1,  0, -0.26107636489332E+00),
            (1,  1,  0.22592965981586E+00),
            (1,  2, -0.64256463395226E-01),
            (1,  3,  0.78876289270526E-02),
            (1, 12,  0.35672110607366E-09),
            (1, 31,  0.17332496994895E-23),
            (2,  0,  0.56608900654837E-03),
            (2,  1, -0.32635483139717E-03),
            (2,  2,  0.44778286690632E-04),
            (2,  9, -0.51322156908507E-09),
            (2, 31, -0.42522657042207E-25),
            (3, 10,  0.26400441360689E-12),
            (3, 32,  0.78124600459723E-28),
            (4, 32, -0.30732199903668E-30)
        };
        public Region1S() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 1.0; a = 0; b = 2.0; f = 1;
        }
    }
    class Region1HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  0, -0.691997014660582E0),
            (0,  1, -0.183612548787560E2),
            (0,  2, -0.928332409297335E1),
            (0,  4,  0.659639569909906E2),
            (0,  5, -0.162060388912024E2),
            (0,  6,  0.450620017338667E3),
            (0,  8,  0.854680678224170E3),
            (0, 14,  0.607523214001162E4),
            (1,  0,  0.326487682621856E2),
            (1,  1, -0.269408844582931E2),
            (1,  4, -0.319947848334300E3),
            (1,  6, -0.928354307043320E3),
            (2,  0,  0.303634537455249E2),
            (2,  1, -0.650540422444146E2),
            (2, 10, -0.430991316516130E4),
            (3,  4, -0.747512324096068E3),
            (4,  1,  0.730000345529245E3),
            (4,  4,  0.114284032569021E4),
            (5,  0, -0.436407041874559E3)
        };
        public Region1HS() : base(data)
        {
            p_star = 100; h_star = 3400; s_star = 7.6; a = 0.05; b = 0.05; c = 1;
        }
    }
    // Region 2 *******************************************************************************
    //Table 20. Numerical values of the coefficients and exponents of the backward equation T(p, h ) for
    //subregion 2a, Eq. (22)
    class Region2aH : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  0,  0.10898952318288E+04),
            (0,  1,  0.84951654495535E+03),
            (0,  2, -0.10781748091826E+03),
            (0,  3,  0.33153654801263E+02),
            (0,  7, -0.74232016790248E+01),
            (0, 20,  0.11765048724356E+02),
            (1,  0,  0.18445749355790E+01),
            (1,  1, -0.41792700549624E+01),
            (1,  2,  0.62478196935812E+01),
            (1,  3, -0.17344563108114E+02),
            (1,  7, -0.20058176862096E+03),
            (1,  9,  0.27196065473796E+03),
            (1, 11, -0.45511318285818E+03),
            (1, 18,  0.30919688604755E+04),
            (1, 44,  0.25226640357872E+06),
            (2,  0, -0.61707422868339E-02),
            (2,  2, -0.31078046629583E+00),
            (2,  7,  0.11670873077107E+02),
            (2, 36,  0.12812798404046E+09),
            (2, 38, -0.98554909623276E+09),
            (2, 40,  0.28224546973002E+10),
            (2, 42, -0.35948971410703E+10),
            (2, 44,  0.17227349913197E+10),
            (3, 24, -0.13551334240775E+05),
            (3, 44,  0.12848734664650E+08),
            (4, 12,  0.13865724283226E+01),
            (4, 32,  0.23598832556514E+06),
            (4, 44, -0.13105236545054E+08),
            (5, 32,  0.73999835474766E+04),
            (5, 36, -0.55196697030060E+06),
            (5, 42,  0.37154085996233E+07),
            (6, 34,  0.19127729239660E+05),
            (6, 44, -0.41535164835634E+06),
            (7, 28, -0.62459855192507E+02)
        };
        public Region2aH() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 2000.0; a = 0; b = -2.1; f = 1;
        }
    }
    //Table 21. Numerical values of the coefficients and exponents of the backward equation T ( p,h ) for
    //subregion 2b, Eq. (23)
    class Region2bH : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  0,  0.14895041079516E+04),
            (0,  1,  0.74307798314034E+03),
            (0,  2, -0.97708318797837E+02),
            (0, 12,  0.24742464705674E+01),
            (0, 18, -0.63281320016026E+00),
            (0, 24,  0.11385952129658E+01),
            (0, 28, -0.47811863648625E+00),
            (0, 40,  0.85208123431544E-02),
            (1,  0,  0.93747147377932E+00),
            (1,  2,  0.33593118604916E+01),
            (1,  6,  0.33809355601454E+01),
            (1, 12,  0.16844539671904E+00),
            (1, 18,  0.73875745236695E+00),
            (1, 24, -0.47128737436186E+00),
            (1, 28,  0.15020273139707E+00),
            (1, 40, -0.21764114219750E-02),
            (2,  2, -0.21810755324761E-01),
            (2,  8, -0.10829784403677E+00),
            (2, 18, -0.46333324635812E-01),
            (2, 40,  0.71280351959551E-04),
            (3,  1,  0.11032831789999E-03),
            (3,  2,  0.18955248387902E-03),
            (3, 12,  0.30891541160537E-02),
            (3, 24,  0.13555504554949E-02),
            (4,  2,  0.28640237477456E-06),
            (4, 12, -0.10779857357512E-04),
            (4, 18, -0.76462712454814E-04),
            (4, 24,  0.14052392818316E-04),
            (4, 28, -0.31083814331434E-04),
            (4, 40, -0.10302738212103E-05),
            (5, 18,  0.28217281635040E-06),
            (5, 24,  0.12704902271945E-05),
            (5, 40,  0.73803353468292E-07),
            (6, 28, -0.11030139238909E-07),
            (7,  2, -0.81456365207833E-13),
            (7, 28, -0.25180545682962E-10),
            (9,  1, -0.17565233969407E-17),
            (9, 40,  0.86934156344163E-14)
        };
        public Region2bH() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 2000.0; a = -2; b = -2.6; f = 1;
        }
    }
    //Table 22. Numerical values of the coefficients and exponents of the backward
    //equation T(p, h ) for subregion 2c, Eq. (24)
    class Region2cH : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-7,  0, -0.32368398555242E+13),
            (-7,  4,  0.73263350902181E+13),
            (-6,  0,  0.35825089945447E+12),
            (-6,  2, -0.58340131851590E+12),
            (-5,  0, -0.10783068217470E+11),
            (-5,  2,  0.20825544563171E+11),
            (-2,  0,  0.61074783564516E+06),
            (-2,  1,  0.85977722535580E+06),
            (-1,  0, -0.25745723604170E+05),
            (-1,  2,  0.31081088422714E+05),
            ( 0,  0,  0.12082315865936E+04),
            ( 0,  1,  0.48219755109255E+03),
            ( 1,  4,  0.37966001272486E+01),
            ( 1,  8, -0.10842984880077E+02),
            ( 2,  4, -0.45364172676660E-01),
            ( 6,  0,  0.14559115658698E-12),
            ( 6,  1,  0.11261597407230E-11),
            ( 6,  4, -0.17804982240686E-10),
            ( 6, 10,  0.12324579690832E-06),
            ( 6, 12, -0.11606921130984E-05),
            ( 6, 16,  0.27846367088554E-04),
            ( 6, 20, -0.59270038474176E-03),
            ( 6, 22,  0.12918582991878E-02)
        };
        public Region2cH() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 2000.0; a = 25; b = -1.8; f = 1;
        }
    }
    //Table 25. Numerical values of the coefficients and exponents of the backward equation T(p, s ) for
    //subregion 2a, Eq. (25)
    class Region2aS
    {
        static readonly ValueTuple<double, int, double>[] data = {
            (-1.50, -24, -0.39235983861984E+6),
            (-1.50, -23,  0.51526573827270E+6),
            (-1.50, -19,  0.40482443161048E+5),
            (-1.50, -13, -0.32193790923902E+3),
            (-1.50, -11,  0.96961424218694E+2),
            (-1.50, -10, -0.22867846371773E+2),
            (-1.25, -19, -0.44942914124357E+6),
            (-1.25, -15, -0.50118336020166E+4),
            (-1.25,  -6,  0.35684463560015E+0),
            (-1.00, -26,  0.44235335848190E+5),
            (-1.00, -21, -0.13673388811708E+5),
            (-1.00, -17,  0.42163260207864E+6),
            (-1.00, -16,  0.22516925837475E+5),
            (-1.00,  -9,  0.47442144865646E+3),
            (-1.00,  -8, -0.14931130797647E+3),
            (-0.75, -15, -0.19781126320452E+6),
            (-0.75, -14, -0.23554399470760E+5),
            (-0.50, -26, -0.19070616302076E+5),
            (-0.50, -13,  0.55375669883164E+5),
            (-0.50,  -9,  0.38293691437363E+4),
            (-0.50,  -7, -0.60391860580567E+3),
            (-0.25, -27,  0.19363102620331E+4),
            (-0.25, -25,  0.42660643698610E+4),
            (-0.25, -11, -0.59780638872718E+4),
            (-0.25,  -6, -0.70401463926862E+3),
            ( 0.25,   1,  0.33836784107553E+3),
            ( 0.25,   4,  0.20862786635187E+2),
            ( 0.25,   8,  0.33834172656196E-1),
            ( 0.25,  11, -0.43124428414893E-4),
            ( 0.50,   0,  0.16653791356412E+3),
            ( 0.50,   1, -0.13986292055898E+3),
            ( 0.50,   5, -0.78849547999872E+0),
            ( 0.50,   6,  0.72132411753872E-1),
            ( 0.50,  10, -0.59754839398283E-2),
            ( 0.50,  14, -0.12141358953904E-4),
            ( 0.50,  16,  0.23227096733871E-6),
            ( 0.75,   0, -0.10538463566194E+2),
            ( 0.75,   4,  0.20718925496502E+1),
            ( 0.75,   9, -0.72193155260427E-1),
            ( 0.75,  17,  0.20749887081120E-6),
            ( 1.00,   7, -0.18340657911379E-1),
            ( 1.00,  18,  0.29036272348696E-6),
            ( 1.25,   3,  0.21037527893619E+0),
            ( 1.25,  15,  0.25681239729999E-3),
            ( 1.50,   5, -0.12799002933781E-1),
            ( 1.50,  18, -0.82198102652018E-5)
        };

        double p_star, X_star, T_star;
        int N;
        double a, b, f;
        double[] I;
        int[] J;
        double[] n;
        public Region2aS()
        {
            p_star = 1; T_star = 1.0; X_star = 2.0; a = 0; b = -2; f = 1;
            N = data.Length;
            I = new double[N];
            J = new int[N];
            n = new double[N];
            for (int i = 0; i < N; ++i)
            {
                var tuple = data[i];
                I[i] = tuple.Item1;
                J[i] = tuple.Item2;
                n[i] = tuple.Item3;
            }
        }

        // This function imitates the Region3BackwardsRegion structure already written above
        // for v(T,p) in Region 3. However, it can be used for the functions T(p,h) [Y=T, X=h] or
        // T(p,s) [Y=T, X=s] in Regions 1, 2, or 3.  Additionally, it can be called for
        // v(p,h) [Y=v, X=h] or v(p,s) [Y=v, X=s] in Region 3.  since there are no direct formulas
        // for v(p,h) and v(p,s) in Regions 1 and 2, they have got be evaluated in a two step
        // process by evaluating v(T,p) using T(p,X) and the p value supplied.
        public double T_pX(double p, double X)
        {
            double pi = p / p_star, eta = X / X_star;
            double summer = 0;
            for (int i = 0; i < N; ++i)
            {
                summer += n[i] * Math.Pow(pi + a, I[i]) * FastPow.Pow(eta + b, J[i]) * FastPow.Pow(f, J[i]);
            }
            return summer * T_star;
        }
    }
    //Table 26. Numerical values of the coefficients and exponents of the backward equation T( p,s ) for
    //subregion 2b, Eq. (26)
    class Region2bS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-6,  0,  0.31687665083497E+6),
            (-6, 11,  0.20864175881858E+2),
            (-5,  0, -0.39859399803599E+6),
            (-5, 11, -0.21816058518877E+2),
            (-4,  0,  0.22369785194242E+6),
            (-4,  1, -0.27841703445817E+4),
            (-4, 11,  0.99207436071480E+1),
            (-3,  0, -0.75197512299157E+5),
            (-3,  1,  0.29708605951158E+4),
            (-3, 11, -0.34406878548526E+1),
            (-3, 12,  0.38815564249115E+0),
            (-2,  0,  0.17511295085750E+5),
            (-2,  1, -0.14237112854449E+4),
            (-2,  6,  0.10943803364167E+1),
            (-2, 10,  0.89971619308495E+0),
            (-1,  0, -0.33759740098958E+4),
            (-1,  1,  0.47162885818355E+3),
            (-1,  5, -0.19188241993679E+1),
            (-1,  8,  0.41078580492196E+0),
            (-1,  9, -0.33465378172097E+0),
            ( 0,  0,  0.13870034777505E+4),
            ( 0,  1, -0.40663326195838E+3),
            ( 0,  2,  0.41727347159610E+2),
            ( 0,  4,  0.21932549434532E+1),
            ( 0,  5, -0.10320050009077E+1),
            ( 0,  6,  0.35882943516703E+0),
            ( 0,  9,  0.52511453726066E-2),
            ( 1,  0,  0.12838916450705E+2),
            ( 1,  1, -0.28642437219381E+1),
            ( 1,  2,  0.56912683664855E+0),
            ( 1,  3, -0.99962954584931E-1),
            ( 1,  7, -0.32632037778459E-2),
            ( 1,  8,  0.23320922576723E-3),
            ( 2,  0, -0.15334809857450E+0),
            ( 2,  1,  0.29072288239902E-1),
            ( 2,  5,  0.37534702741167E-3),
            ( 3,  0,  0.17296691702411E-2),
            ( 3,  1, -0.38556050844504E-3),
            ( 3,  3, -0.35017712292608E-4),
            ( 4,  0, -0.14566393631492E-4),
            ( 4,  1,  0.56420857267269E-5),
            ( 5,  0,  0.41286150074605E-7),
            ( 5,  1, -0.20684671118824E-7),
            ( 5,  2,  0.16409393674725E-8)
        };
        public Region2bS() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 0.7853; a = 0; b = -10; f = -1;
        }
    }
    //Table 27. Numerical values of the coefficient s and exponents of the backward equation T( p,s ) for
    //subregion 2c, Eq. (27)
    class Region2cS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-2, 0,  0.90968501005365E+03),
            (-2, 1,  0.24045667088420E+04),
            (-1, 0, -0.59162326387130E+03),
            ( 0, 0,  0.54145404128074E+03),
            ( 0, 1, -0.27098308411192E+03),
            ( 0, 2,  0.97976525097926E+03),
            ( 0, 3, -0.46966772959435E+03),
            ( 1, 0,  0.14399274604723E+02),
            ( 1, 1, -0.19104204230429E+02),
            ( 1, 3,  0.53299167111971E+01),
            ( 1, 4, -0.21252975375934E+02),
            ( 2, 0, -0.31147334413760E+00),
            ( 2, 1,  0.60334840894623E+00),
            ( 2, 2, -0.42764839702509E-01),
            ( 3, 0,  0.58185597255259E-02),
            ( 3, 1, -0.14597008284753E-01),
            ( 3, 5,  0.56631175631027E-02),
            ( 4, 0, -0.76155864584577E-04),
            ( 4, 1,  0.22440342919332E-03),
            ( 4, 4, -0.12561095013413E-04),
            ( 5, 0,  0.63323132660934E-06),
            ( 5, 1, -0.20541989675375E-05),
            ( 5, 2,  0.36405370390082E-07),
            ( 6, 0, -0.29759897789215E-08),
            ( 6, 1,  0.10136618529763E-07),
            ( 7, 0,  0.59925719692351E-11),
            ( 7, 1, -0.20677870105164E-10),
            ( 7, 3, -0.20874278181886E-10),
            ( 7, 4,  0.10162166825089E-09),
            ( 7, 5, -0.16429828281347E-09)
        };
        public Region2cS() : base(data)
        {
            p_star = 1; T_star = 1.0; X_star = 2.9251; a = 0; b = -2; f = -1;
        }
    }
    class Region2aHS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (0,  1, -0.182575361923032E-1),
            (0,  3, -0.125229548799536E+0),
            (0,  6,  0.592290437320145E+0),
            (0, 16,  0.604769706185122E+1),
            (0, 20,  0.238624965444474E+3),
            (0, 22, -0.298639090222922E+3),
            (1,  0,  0.512250813040750E-1),
            (1,  1, -0.437266515606486E+0),
            (1,  2,  0.413336902999504E+0),
            (1,  3, -0.516468254574773E+1),
            (1,  5, -0.557014838445711E+1),
            (1,  6,  0.128555037824478E+2),
            (1, 10,  0.114144108953290E+2),
            (1, 16, -0.119504225652714E+3),
            (1, 20, -0.284777985961560E+4),
            (1, 22,  0.431757846408006E+4),
            (2,  3,  0.112894040802650E+1),
            (2, 16,  0.197409186206319E+4),
            (2, 20,  0.151612444706087E+4),
            (3,  0,  0.141324451421235E-1),
            (3,  2,  0.585501282219601E+0),
            (3,  3, -0.297258075863012E+1),
            (3,  6,  0.594567314847319E+1),
            (3, 16, -0.623656565798905E+4),
            (4, 16,  0.965986235133332E+4),
            (5,  3,  0.681500934948134E+1),
            (5, 16, -0.633207286824489E+4),
            (6,  3, -0.558919224465760E+1),
            (7,  1,  0.400645798472063E-1)
        };
        public Region2aHS() : base(data)
        {
            p_star = 4; h_star = 4200; s_star = 12; a = -0.5; b = -1.2; c = 4;
        }
    }
    class Region2bHS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  0,  0.801496989929495E-01),
            ( 0,  1, -0.543862807146111E+00),
            ( 0,  2,  0.337455597421283E+00),
            ( 0,  4,  0.890555451157450E+01),
            ( 0,  8,  0.313840736431485E+03),
            ( 1,  0,  0.797367065977789E+00),
            ( 1,  1, -0.121616973556240E+01),
            ( 1,  2,  0.872803386937477E+01),
            ( 1,  3, -0.169769781757602E+02),
            ( 1,  5, -0.186552827328416E+03),
            ( 1, 12,  0.951159274344237E+05),
            ( 2,  1, -0.189168510120494E+02),
            ( 2,  6, -0.433407037194840E+04),
            ( 2, 18,  0.543212633012715E+09),
            ( 3,  0,  0.144793408386013E+00),
            ( 3,  1,  0.128024559637516E+03),
            ( 3,  7, -0.672309534071268E+05),
            ( 3, 12,  0.336972380095287E+08),
            ( 4,  1, -0.586634196762720E+03),
            ( 4, 16, -0.221403224769889E+11),
            ( 5,  1,  0.171606668708389E+04),
            ( 5, 12, -0.570817595806302E+09),
            ( 6,  1, -0.312109693178482E+04),
            ( 6,  8, -0.207841384633010E+07),
            ( 6, 18,  0.305605946157786E+13),
            ( 7,  1,  0.322157004314333E+04),
            ( 7, 16,  0.326810259797295E+12),
            ( 8,  1, -0.144104158934487E+04),
            ( 8,  3,  0.410694867802691E+03),
            ( 8, 14,  0.109077066873024E+12),
            ( 8, 18, -0.247964654258893E+14),
            (12, 10,  0.188801906865134E+10),
            (14, 16, -0.123651009018773E+15)
        };
        public Region2bHS() : base(data)
        {
            p_star = 100; h_star = 4100; s_star = 7.9; a = -0.6; b = -1.01; c = 4;
        }
    }
    class Region2cHS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  0,  0.112225607199012E+00),
            ( 0,  1, -0.339005953606712E+01),
            ( 0,  2, -0.320503911730094E+02),
            ( 0,  3, -0.197597305104900E+03),
            ( 0,  4, -0.407693861553446E+03),
            ( 0,  8,  0.132943775222331E+05),
            ( 1,  0,  0.170846839774007E+01),
            ( 1,  2,  0.373694198142245E+02),
            ( 1,  5,  0.358144365815434E+04),
            ( 1,  8,  0.423014446424664E+06),
            ( 1, 14, -0.751071025760063E+09),
            ( 2,  2,  0.523446127607898E+02),
            ( 2,  3, -0.228351290812417E+03),
            ( 2,  7, -0.960652417056937E+06),
            ( 2, 10, -0.807059292526074E+08),
            ( 2, 18,  0.162698017225669E+13),
            ( 3,  0,  0.772465073604171E+00),
            ( 3,  5,  0.463929973837746E+05),
            ( 3,  8, -0.137317885134128E+08),
            ( 3, 16,  0.170470392630512E+13),
            ( 3, 18, -0.251104628187308E+14),
            ( 4, 18,  0.317748830835520E+14),
            ( 5,  1,  0.538685623675312E+02),
            ( 5,  4, -0.553089094625169E+05),
            ( 5,  6, -0.102861522421405E+07),
            ( 5, 14,  0.204249418756234E+13),
            ( 6,  8,  0.273918446626977E+09),
            ( 6, 18, -0.263963146312685E+16),
            (10,  7, -0.107890854108088E+10),
            (12,  7, -0.296492620980124E+11),
            (16, 10, -0.111754907323424E+16)
        };
        public Region2cHS() : base(data)
        {
            p_star = 100; h_star = 3500; s_star = 5.9; a = -0.7; b = -1.1; c = 4;
        }
    }
    // Region 3 *******************************************************************************
    class Region3aH : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12,  0, -0.133645667811215E-6),
            (-12,  1,  0.455912656802978E-5),
            (-12,  2, -0.146294640700979E-4),
            (-12,  6,  0.639341312970080E-2),
            (-12, 14,  0.372783927268847E+3),
            (-12, 16, -0.718654377460447E+4),
            (-12, 20,  0.573494752103400E+6),
            (-12, 22, -0.267569329111439E+7),
            (-10,  1, -0.334066283302614E-4),
            (-10,  5, -0.245479214069597E-1),
            (-10, 12,  0.478087847764996E+2),
            ( -8,  0,  0.764664131818904E-5),
            ( -8,  2,  0.128350627676972E-2),
            ( -8,  4,  0.171219081377331E-1),
            ( -8, 10, -0.851007304583213E+1),
            ( -5,  2, -0.136513461629781E-1),
            ( -3,  0, -0.384460997596657E-5),
            ( -2,  1,  0.337423807911655E-2),
            ( -2,  3, -0.551624873066791E+0),
            ( -2,  4,  0.729202277107470E+0),
            ( -1,  0, -0.992522757376041E-2),
            ( -1,  2, -0.119308831407288E+0),
            (  0,  0,  0.793929190615421E+0),
            (  0,  1,  0.454270731799386E+0),
            (  1,  1,  0.209998591259910E+0),
            (  3,  0, -0.642109823904738E-2),
            (  3,  1, -0.235155868604540E-1),
            (  4,  0,  0.252233108341612E-2),
            (  4,  3, -0.764885133368119E-2),
            ( 10,  4,  0.136176427574291E-1),
            ( 12,  5, -0.133027883575669E-1)
        };
        public Region3aH() : base(data)
        {
            p_star = 100; T_star = 760.0; X_star = 2300.0; a = 0.240; b = -0.615; f = 1;
        }
    }
    class Region3bH : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12,  0,  0.323254573644920E-4),
            (-12,  1, -0.127575556587181E-3),
            (-10,  0, -0.475851877356068E-3),
            (-10,  1,  0.156183014181602E-2),
            (-10,  5,  0.105724860113781E+0),
            (-10, 10, -0.858514221132534E+2),
            (-10, 12,  0.724140095480911E+3),
            ( -8,  0,  0.296475810273257E-2),
            ( -8,  1, -0.592721983365988E-2),
            ( -8,  2, -0.126305422818666E-1),
            ( -8,  4, -0.115716196364853E+0),
            ( -8, 10,  0.849000969739595E+2),
            ( -6,  0, -0.108602260086615E-1),
            ( -6,  1,  0.154304475328851E-1),
            ( -6,  2,  0.750455441524466E-1),
            ( -4,  0,  0.252520973612982E-1),
            ( -4,  1, -0.602507901232996E-1),
            ( -3,  5, -0.307622221350501E+1),
            ( -2,  0, -0.574011959864879E-1),
            ( -2,  4,  0.503471360939849E+1),
            ( -1,  2, -0.925081888584834E+0),
            ( -1,  4,  0.391733882917546E+1),
            ( -1,  6, -0.773146007130190E+2),
            ( -1, 10,  0.949308762098587E+4),
            ( -1, 14, -0.141043719679409E+7),
            ( -1, 16,  0.849166230819026E+7),
            (  0,  0,  0.861095729446704E+0),
            (  0,  2,  0.323346442811720E+0),
            (  1,  1,  0.873281936020439E+0),
            (  3,  1, -0.436653048526683E+0),
            (  5,  1,  0.286596714529479E+0),
            (  6,  1, -0.131778331276228E+0),
            (  8,  1,  0.676682064330275E-2)
        };
        public Region3bH() : base(data)
        {
            p_star = 100; T_star = 860.0; X_star = 2800.0; a = 0.298; b = -0.720; f = 1;
        }
    }
    class Region3aS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12, 28,  0.150042008263875E+10),
            (-12, 32, -0.159397258480424E+12),
            (-10,  4,  0.502181140217975E-03),
            (-10, 10, -0.672057767855466E+02),
            (-10, 12,  0.145058545404456E+04),
            (-10, 14, -0.823889534888890E+04),
            ( -8,  5, -0.154852214233853E+00),
            ( -8,  7,  0.112305046746695E+02),
            ( -8,  8, -0.297000213482822E+02),
            ( -8, 28,  0.438565132635495E+11),
            ( -6,  2,  0.137837838635464E-02),
            ( -6,  6, -0.297478527157462E+01),
            ( -6, 32,  0.971777947349413E+13),
            ( -5,  0, -0.571527767052398E-04),
            ( -5, 14,  0.288307949778420E+05),
            ( -5, 32, -0.744428289262703E+14),
            ( -4,  6,  0.128017324848921E+02),
            ( -4, 10, -0.368275545889071E+03),
            ( -4, 36,  0.664768904779177E+16),
            ( -2,  1,  0.449359251958880E-01),
            ( -2,  4, -0.422897836099655E+01),
            ( -1,  1, -0.240614376434179E+00),
            ( -1,  6, -0.474341365254924E+01),
            (  0,  0,  0.724093999126110E+00),
            (  0,  1,  0.923874349695897E+00),
            (  0,  4,  0.399043655281015E+01),
            (  1,  0,  0.384066651868009E-01),
            (  2,  0, -0.359344365571848E-02),
            (  2,  3, -0.735196448821653E+00),
            (  3,  2,  0.188367048396131E+00),
            (  8,  0,  0.141064266818704E-03),
            (  8,  1, -0.257418501496337E-02),
            ( 10,  2,  0.123220024851555E-02)
        };
        public Region3aS() : base(data)
        {
            p_star = 100; T_star = 760.0; X_star = 4.4; a = 0.240; b = -0.703; f = 1;
        }
    }
    class Region3bS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12,  1,  0.527111701601660E+00),
            (-12,  3, -0.401317830052742E+02),
            (-12,  4,  0.153020073134484E+03),
            (-12,  7, -0.224799398218827E+04),
            ( -8,  0, -0.193993484669048E+00),
            ( -8,  1, -0.140467557893768E+01),
            ( -8,  3,  0.426799878114024E+02),
            ( -6,  0,  0.752810643416743E+00),
            ( -6,  2,  0.226657238616417E+02),
            ( -6,  4, -0.622873556909932E+03),
            ( -5,  0, -0.660823667935396E+00),
            ( -5,  1,  0.841267087271658E+00),
            ( -5,  2, -0.253717501764397E+02),
            ( -5,  4,  0.485708963532948E+03),
            ( -5,  6,  0.880531517490555E+03),
            ( -4, 12,  0.265015592794626E+07),
            ( -3,  1, -0.359287150025783E+00),
            ( -3,  6, -0.656991567673753E+03),
            ( -2,  2,  0.241768149185367E+01),
            (  0,  0,  0.856873461222588E+00),
            (  2,  1,  0.655143675313458E+00),
            (  3,  1, -0.213535213206406E+00),
            (  4,  0,  0.562974957606348E-02),
            (  5, 24, -0.316955725450471E+15),
            (  6,  0, -0.699997000152457E-03),
            (  8,  3,  0.119845803210767E-01),
            ( 12,  1,  0.193848122022095E-04),
            ( 14,  2, -0.215095749182309E-04)
        };
        public Region3bS() : base(data)
        {
            p_star = 100; T_star = 860.0; X_star = 5.3; a = 0.760; b = -0.818; f = 1;
        }
    }
    class Region3aHS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  0,  0.770889828326934E01),
            ( 0,  1, -0.260835009128688E02),
            ( 0,  5,  0.267416218930389E03),
            ( 1,  0,  0.172221089496844E02),
            ( 1,  3, -0.293542332145970E03),
            ( 1,  4,  0.614135601882478E03),
            ( 1,  8, -0.610562757725674E05),
            ( 1, 14, -0.651272251118219E08),
            ( 2,  6,  0.735919313521937E05),
            ( 2, 16, -0.116646505914191E11),
            ( 3,  0,  0.355267086434461E02),
            ( 3,  2, -0.596144543825955E03),
            ( 3,  3, -0.475842430145708E03),
            ( 4,  0,  0.696781965359503E02),
            ( 4,  1,  0.335674250377312E03),
            ( 4,  4,  0.250526809130882E05),
            ( 4,  5,  0.146997380630766E06),
            ( 5, 28,  0.538069315091534E20),
            ( 6, 28,  0.143619827291346E22),
            ( 7, 24,  0.364985866165994E20),
            ( 8,  1, -0.254741561156775E04),
            (10, 32,  0.240120197096563E28),
            (10, 36, -0.393847464679496E30),
            (14, 22,  0.147073407024852E25),
            (18, 28, -0.426391250432059E32),
            (20, 36,  0.194509340621077E39),
            (22, 16,  0.666212132114896E24),
            (22, 28,  0.706777016552858E34),
            (24, 36,  0.175563621975576E42),
            (28, 16,  0.108408607429124E29),
            (28, 36,  0.730872705175151E44),
            (32, 10,  0.159145847398870E25),
            (32, 28,  0.377121605943324E41)
        };
        public Region3aHS() : base(data)
        {
            p_star = 99; h_star = 2300; s_star = 4.4; a = -1.01; b = -0.750; c = 1;
        }
    }
    class Region3bHS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12,  2,  0.125244360717979E-12),
            (-12, 10, -0.126599322553713E-01),
            (-12, 12,  0.506878030140626E+01),
            (-12, 14,  0.317847171154202E+02),
            (-12, 20, -0.391041161399932E+06),
            (-10,  2, -0.975733406392044E-10),
            (-10, 10, -0.186312419488279E+02),
            (-10, 14,  0.510973543414101E+03),
            (-10, 18,  0.373847005822362E+06),
            ( -8,  2,  0.299804024666572E-07),
            ( -8,  8,  0.200544393820342E+02),
            ( -6,  2, -0.498030487662829E-05),
            ( -6,  6, -0.102301806360030E+02),
            ( -6,  7,  0.552819126990325E+02),
            ( -6,  8, -0.206211367510878E+03),
            ( -5, 10, -0.794012232324823E+04),
            ( -4,  4,  0.782248472028153E+01),
            ( -4,  5, -0.586544326902468E+02),
            ( -4,  8,  0.355073647696481E+04),
            ( -3,  1, -0.115303107290162E-03),
            ( -3,  3, -0.175092403171802E+01),
            ( -3,  5,  0.257981687748160E+03),
            ( -3,  6, -0.727048374179467E+03),
            ( -2,  0,  0.121644822609198E-03),
            ( -2,  1,  0.393137871762692E-01),
            ( -1,  0,  0.704181005909296E-02),
            (  0,  3, -0.829108200698110E+02),
            (  2,  0, -0.265178818131250E+00),
            (  2,  1,  0.137531682453991E+02),
            (  5,  0, -0.522394090753046E+02),
            (  6,  1,  0.240556298941048E+04),
            (  8,  1, -0.227361631268929E+05),
            ( 10,  1,  0.890746343932567E+05),
            ( 14,  3, -0.239234565822486E+08),
            ( 14,  7,  0.568795808129714E+10)
        };
        public Region3bHS() : base(data)
        {
            p_star = 16.6; h_star = 2800; s_star = 5.3; a = -0.681; b = -0.792; c = -1;
        }
    }
    // Region 4 *******************************************************************************
    class Region4HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  0,  0.179882673606601E+00),
            ( 0,  3, -0.267507455199603E+00),
            ( 0, 12,  0.116276722612600E+01),
            ( 1,  0,  0.147545428713616E+00),
            ( 1,  1, -0.512871635973248E+00),
            ( 1,  2,  0.421333567697984E+00),
            ( 1,  5,  0.563749522189870E+00),
            ( 2,  0,  0.429274443819153E+00),
            ( 2,  5, -0.335704552142140E+01),
            ( 2,  8,  0.108890916499278E+02),
            ( 3,  0, -0.248483390456012E+00),
            ( 3,  2,  0.304153221906390E+00),
            ( 3,  3, -0.494819763939905E+00),
            ( 3,  4,  0.107551674933261E+01),
            ( 4,  0,  0.733888415457688E-01),
            ( 4,  1,  0.140170545411085E-01),
            ( 5,  1, -0.106110975998808E+00),
            ( 5,  2,  0.168324361811875E-01),
            ( 5,  4,  0.125028363714877E+01),
            ( 5, 16,  0.101316840309509E+04),
            ( 6,  6, -0.151791558000712E+01),
            ( 6,  8,  0.524277865990866E+02),
            ( 6, 22,  0.230495545563912E+05),
            ( 8,  1,  0.249459806365456E-01),
            (10, 20,  0.210796467412137E+07),
            (10, 36,  0.366836848613065E+09),
            (12, 24, -0.144814105365163E+09),
            (14,  1, -0.179276373003590E-02),
            (14, 28,  0.489955602100459E+10),
            (16, 12,  0.471262212070518E+03),
            (16, 32, -0.829294390198652E+11),
            (18, 14, -0.171545662263191E+04),
            (18, 22,  0.355777682973575E+07),
            (18, 36,  0.586062760258436E+12),
            (20, 24, -0.129887635078195E+08),
            (28, 36,  0.317247449371057E+11)
        };
        public Region4HS() : base(data)
        {
            h_star = 2800.0; s_star = 9.2; T_star = 550; a = -0.119; b = -1.07;
        }
    }
    // h(s) Boundary Equations *******************************************************************************
    class Boundary14HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0, 14,  0.332171191705237E+0),
            ( 0, 36,  0.611217706323496E-3),
            ( 1,  3, -0.882092478906822E+1),
            ( 1, 16, -0.455628192543250E+0),
            ( 2,  0, -0.263483840850452E-4),
            ( 2,  5, -0.223949661148062E+2),
            ( 3,  4, -0.428398660164013E+1),
            ( 3, 36, -0.616679338856916E+0),
            ( 4,  4, -0.146823031104040E+2),
            ( 4, 16,  0.284523138727299E+3),
            ( 4, 24, -0.113398503195444E+3),
            ( 5, 18,  0.115671380760859E+4),
            ( 5, 24,  0.395551267359325E+3),
            ( 7,  1, -0.154891257229285E+1),
            ( 8,  4,  0.194486637751291E+2),
            (12,  2, -0.357915139457043E+1),
            (12,  4, -0.335369414148819E+1),
            (14,  1, -0.664426796332460E+0),
            (14, 22,  0.323321885383934E+5),
            (16, 10,  0.331766744667084E+4),
            (20, 12, -0.223501257931087E+5),
            (20, 28,  0.573953875852936E+7),
            (22,  8,  0.173226193407919E+3),
            (24,  3, -0.363968822121321E-1),
            (28,  0,  0.834596332878346E-6),
            (32,  6,  0.503611916682674E+1),
            (32,  8,  0.655444787064505E+2)
        };
        public Boundary14HS() : base(data)
        {
            h_star = 1700.0; s_star = 3.8; s2_star = s_star; a = -1.09; b = 0.366E-4; c = 1; d = 1; e = 0;
        }
    }
    class Boundary3a4HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  1,  0.822673364673336E+0),
            ( 0,  4,  0.181977213534479E+0),
            ( 0, 10, -0.112000260313624E-1),
            ( 0, 16, -0.746778287048033E-3),
            ( 2,  1, -0.179046263257381E+0),
            ( 3, 36,  0.424220110836657E-1),
            ( 4,  3, -0.341355823438768E+0),
            ( 4, 16, -0.209881740853565E+1),
            ( 5, 20, -0.822477343323596E+1),
            ( 5, 36, -0.499684082076008E+1),
            ( 6,  4,  0.191413958471069E+0),
            ( 7,  2,  0.581062241093136E-1),
            ( 7, 28, -0.165505498701029E+4),
            ( 7, 32,  0.158870443421201E+4),
            (10, 14, -0.850623535172818E+2),
            (10, 32, -0.317714386511207E+5),
            (10, 36, -0.945890406632871E+5),
            (32,  0, -0.139273847088690E-5),
            (32,  6,  0.631052532240980E+0)
        };
        public Boundary3a4HS() : base(data)
        {
            h_star = 1700.0; s_star = 3.8; s2_star = s_star; a = -1.09; b = 0.366E-4; c = 1; d = 1; e = 0;
        }
    }
    class Boundary2ab4HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 1,  8, -0.524581170928788E03),
            ( 1, 24, -0.926947218142218E07),
            ( 2,  4, -0.237385107491666E03),
            ( 2, 32,  0.210770155812776E11),
            ( 4,  1, -0.239494562010986E02),
            ( 4,  2,  0.221802480294197E03),
            ( 7,  7, -0.510472533393438E07),
            ( 8,  5,  0.124981396109147E07),
            ( 8, 12,  0.200008436996201E10),
            (10,  1, -0.815158509791035E03),
            (12,  0, -0.157612685637523E03),
            (12,  7, -0.114200422332791E11),
            (18, 10,  0.662364680776872E16),
            (20, 12, -0.227622818296144E19),
            (24, 32, -0.171048081348406E32),
            (28,  8,  0.660788766938091E16),
            (28, 12,  0.166320055886021E23),
            (28, 20, -0.218003784381501E30),
            (28, 22, -0.787276140295618E30),
            (28, 24,  0.151062329700346E32),
            (32,  2,  0.795732170300541E07),
            (32,  7,  0.131957647355347E16),
            (32, 12, -0.325097068299140E24),
            (32, 14, -0.418600611419248E26),
            (32, 24,  0.297478906557467E35),
            (36, 10, -0.953588761745473E20),
            (36, 12,  0.166957699620939E25),
            (36, 20, -0.175407764869978E33),
            (36, 22,  0.347581490626396E35),
            (36, 28, -0.710971318427851E39)
        };
        public Boundary2ab4HS() : base(data)
        {
            h_star = 2800.0; s_star = 5.21; s2_star = 9.2; a = -0.513; b = -0.524; c = 1; d = -1; e = 1;
        }
    }
    class Boundary2c3b4HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,  0,  0.104351280732769E01),
            ( 0,  3, -0.227807912708513E01),
            ( 0,  4,  0.180535256723202E01),
            ( 1,  0,  0.420440834792042E00),
            ( 1, 12, -0.105721244834660E06),
            ( 5, 36,  0.436911607493884E25),
            ( 6, 12, -0.328032702839753E12),
            ( 7, 16, -0.678686760804270E16),
            ( 8,  2,  0.743957464645363E04),
            ( 8, 20, -0.356896445355761E20),
            (12, 32,  0.167590585186801E32),
            (16, 36, -0.355028625419105E38),
            (22,  2,  0.396611982166538E12),
            (22, 32, -0.414716268484468E41),
            (24,  7,  0.359080103867382E19),
            (36, 20, -0.116994334851995E41)
        };
        public Boundary2c3b4HS() : base(data)
        {
            h_star = 2800.0; s_star = 5.9; s2_star = s_star; a = -1.02; b = -0.726; c = 4; d = 1; e = 0;
        }
    }
    class Boundary13HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            ( 0,   0,  0.913965547600543E+00),
            ( 1,  -2, -0.430944856041991E-04),
            ( 1,   2,  0.603235694765419E+02),
            ( 3, -12,  0.117518273082168E-17),
            ( 5,  -4,  0.220000904781292E+00),
            ( 6,  -3, -0.690815545851641E+02)
        };
        public Boundary13HS() : base(data)
        {
            h_star = 1700.0; s_star = 3.8; s2_star = s_star; a = -0.884; b = -0.864; c = 1; d = 1; e = 0;
        }
    }
    class Boundary23HS : BackwardsRegion
    {
        static readonly ValueTuple<int, int, double>[] data = {
            (-12,  10,  0.629096260829810E-03),
            (-10,   8, -0.823453502583165E-03),
            ( -8,   3,  0.515446951519474E-07),
            ( -4,   4, -0.117565945784945E+01),
            ( -3,   3,  0.348519684726192E+01),
            ( -2,  -6, -0.507837382408313E-11),
            ( -2,   2, -0.284637670005479E+01),
            ( -2,   3, -0.236092263939673E+01),
            ( -2,   4,  0.601492324973779E+01),
            (  0,   0,  0.148039650824546E+01),
            (  1,  -3,  0.360075182221907E-03),
            (  1,  -2, -0.126700045009952E-01),
            (  1,  10, -0.122184332521413E+07),
            (  3,  -2,  0.149276502463272E+00),
            (  3,  -1,  0.698733471798484E+00),
            (  5,  -5, -0.252207040114321E-01),
            (  6,  -6,  0.147151930985213E-01),
            (  6,  -3, -0.108618917681849E+01),
            (  8,  -8, -0.936875039816322E-03),
            (  8,  -2,  0.819877897570217E+02),
            (  8,  -1, -0.182041861521835E+03),
            ( 12, -12,  0.261907376402688E-05),
            ( 12,  -1, -0.291626417025961E+05),
            ( 14, -12,  0.140660774926165E-04),
            ( 14,  -1,  0.783237062349385E+07)
        };

        public Boundary23HS() : base(data)
        {
            h_star = 3000.0; s_star = 5.3; T_star = 900; a = -0.727; b = -0.864;
        }
    }
}
